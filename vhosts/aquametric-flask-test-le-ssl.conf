<IfModule mod_ssl.c>
<VirtualHost *:443>
    ServerAdmin webmaster@localhost
    ServerName test.example.com
    ServerAlias test.example.com
    ServerAlias toast.example.com

    WSGIDaemonProcess aquametric python-home=/home/ian/aquametric/venv
    WSGIScriptAlias / /home/ian/aquametric/aquametric.wsgi
    <Directory /home/ian/aquametric>
        WSGIProcessGroup aquametric
        WSGIApplicationGroup %{GLOBAL}
        Require all granted
        Order deny,allow
        Allow from all
    </Directory>

    LogLevel warn
    ErrorLog ${APACHE_LOG_DIR}/aquametric-error.log
    CustomLog ${APACHE_LOG_DIR}/aquametric-access.log combined

Include /etc/letsencrypt/options-ssl-apache.conf
SSLCertificateFile /etc/letsencrypt/live/test.example.com/fullchain.pem
SSLCertificateKeyFile /etc/letsencrypt/live/test.example.com/privkey.pem
</VirtualHost>
</IfModule>

<IfModule mod_ssl.c>
<VirtualHost *:80>
    ServerAdmin webmaster@localhost
    ServerName test.example.com
    ServerAlias test.example.com
    ServerAlias toast.example.com

    # Since everything is being redirected to ssl, we don't
    # need a wsgi process running on port 80

    # WSGIDaemonProcess aquametric-test-2 python-home=/home/ian/aquametric/venv
    # WSGIScriptAlias / /home/ian/aquametric/aquametric.wsgi
    # <Directory /home/ian/aquametric>
    #     WSGIProcessGroup aquametric
    #     WSGIApplicationGroup %{GLOBAL}
    #     Require all granted
    #     Order deny,allow
    #     Allow from all
    # </Directory>
    
    LogLevel warn
    ErrorLog ${APACHE_LOG_DIR}/aquametric-error.log
    CustomLog ${APACHE_LOG_DIR}/aquametric-access.log combined

RewriteEngine on
# Some rewrite rules in this file were disabled on your HTTPS site,
# because they have the potential to create redirection loops.

RewriteCond %{SERVER_NAME} =test.example.com [OR]
RewriteCond %{SERVER_NAME} =toast.example.com
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]

</VirtualHost>
</IfModule>
